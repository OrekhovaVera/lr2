//
// Created by Вера Орехова on 12.03.2023.
//
#include "header.h"

//Входные данные
//В единственной строке записана скобочная последовательность, содержащая не более 100000 скобок.
//Выходные данные
//Если данная последовательность правильная, то программа должна вывести строку yes, иначе строку no.


bool LeftBracket(char c) //возвращает true или false в зависимости от символа
{
    return ('(' == c || '{' == c || '[' == c);
}

bool twoBracket(char lb, char rb) //возвращает true или false в случае закрыты скобки или нет
{
    return ('(' == lb && ')' == rb) || ('[' == lb && ']' == rb) || ('{' == lb && '}' == rb);
}

void taskD()
{
    std::string s;
    std::cin>>s;
    std::stack<char> stack;
        for(std::string::const_iterator it(s.begin()), itEnd(s.end()); it != itEnd; ++it)
         {
        if(LeftBracket(*it)) //проверяем есть ли левая скобка ( { [
        {
            stack.push(*it); //добавляем с стек значение
        }
        else if(twoBracket(stack.top(), *it))  //проверяем на наличие закрытой скобки ) } ] (берем левую скобку из стека и потом проверяем наличие правой)
        {
        stack.pop(); //чистим стек
        }
        else //добавляем правую скобку в стек (если не начинается с левой скобки, то ошибка)
        {
        stack.push(*it);
        break;
        }
        }

    std::cout << (stack.empty() ? "yes" : "no") ; //проверяем стек на пустоту, если есть значения в нем

}
